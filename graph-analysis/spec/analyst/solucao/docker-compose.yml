version: "3.9"

services:
  neo4j:
    image: neo4j:5.13
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      #NEO4J_AUTH: "${NEO4J_USERNAME}/${NEO4J_PASSWORD}"
      NEO4J_AUTH: "neo4j/testpassword"
      NEO4J_dbms_security_auth__minimum__password__length: 4
    volumes:
      - ./neo4j/data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USERNAME}", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 10


  csv-generator:
    build:
      context: .
      dockerfile: docker-build/Dockerfile.generator
    env_file:
      - .env
    volumes:
      - ./data:/data
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
  etl:
    build:
      context: .
      dockerfile: docker-build/Dockerfile.etl
    env_file:
      - .env
    volumes:
      - ./data:/data
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
  api:
    build:
      context: .
      dockerfile: docker-build/Dockerfile.api
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT}/ping"]
      interval: 10s
      timeout: 3s
      retries: 5




